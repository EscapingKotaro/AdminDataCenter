import React, { useState, useEffect } from 'react';
import './SystemHealth.css';

const SystemHealth = ({ serverId }) => {
  const [healthStatus, setHealthStatus] = useState({});

  useEffect(() => {
    const updateHealthStatus = () => {
      setHealthStatus({
        cpu: Math.random() > 0.1 ? 'healthy' : 'warning',
        memory: Math.random() > 0.15 ? 'healthy' : 'warning',
        disk: Math.random() > 0.2 ? 'healthy' : 'critical',
        network: Math.random() > 0.1 ? 'healthy' : 'warning',
        temperature: Math.random() > 0.05 ? 'healthy' : 'critical'
      });
    };

    updateHealthStatus();
    const interval = setInterval(updateHealthStatus, 10000);
    
    return () => clearInterval(interval);
  }, [serverId]);

  const getStatusIcon = (status) => {
    switch (status) {
      case 'healthy': return '‚úÖ';
      case 'warning': return '‚ö†Ô∏è';
      case 'critical': return '‚ùå';
      default: return '‚ùì';
    }
  };

  const getStatusText = (status) => {
    switch (status) {
      case 'healthy': return '–ù–æ—Ä–º–∞';
      case 'warning': return '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ';
      case 'critical': return '–ö—Ä–∏—Ç–∏—á–Ω–æ';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'healthy': return '#10b981';
      case 'warning': return '#f59e0b';
      case 'critical': return '#ef4444';
      default: return '#6b7280';
    }
  };

  return (
    <div className="system-health">
      <h3>‚ù§Ô∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã</h3>
      
      <div className="health-status">
        <div className="health-item">
          <span className="health-icon">‚ö°</span>
          <span className="health-label">–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä</span>
          <span 
            className="health-status"
            style={{ color: getStatusColor(healthStatus.cpu) }}
          >
            {getStatusIcon(healthStatus.cpu)} {getStatusText(healthStatus.cpu)}
          </span>
        </div>

        <div className="health-item">
          <span className="health-icon">üíæ</span>
          <span className="health-label">–ü–∞–º—è—Ç—å</span>
          <span 
            className="health-status"
            style={{ color: getStatusColor(healthStatus.memory) }}
          >
            {getStatusIcon(healthStatus.memory)} {getStatusText(healthStatus.memory)}
          </span>
        </div>

        <div className="health-item">
          <span className="health-icon">üíø</span>
          <span className="health-label">–î–∏—Å–∫</span>
          <span 
            className="health-status"
            style={{ color: getStatusColor(healthStatus.disk) }}
          >
            {getStatusIcon(healthStatus.disk)} {getStatusText(healthStatus.disk)}
          </span>
        </div>

        <div className="health-item">
          <span className="health-icon">üåê</span>
          <span className="health-label">–°–µ—Ç—å</span>
          <span 
            className="health-status"
            style={{ color: getStatusColor(healthStatus.network) }}
          >
            {getStatusIcon(healthStatus.network)} {getStatusText(healthStatus.network)}
          </span>
        </div>

        <div className="health-item">
          <span className="health-icon">üî•</span>
          <span className="health-label">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</span>
          <span 
            className="health-status"
            style={{ color: getStatusColor(healthStatus.temperature) }}
          >
            {getStatusIcon(healthStatus.temperature)} {getStatusText(healthStatus.temperature)}
          </span>
        </div>
      </div>

      <div className="health-summary">
        <div className="summary-item">
          <span className="summary-label">–û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</span>
          <span className="summary-value">
            {Object.values(healthStatus).every(s => s === 'healthy') ? '–û—Ç–ª–∏—á–Ω–æ–µ' : '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è'}
          </span>
        </div>
        
        <div className="summary-item">
          <span className="summary-label">–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:</span>
          <span className="summary-value">
            {new Date().toLocaleTimeString()}
          </span>
        </div>
      </div>
    </div>
  );
};

export default SystemHealth;